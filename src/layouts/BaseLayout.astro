---
import Metas from "../components/Metas.astro";
import GoogleAnalytics from "../components/GoogleAnalytics.astro";
import Header from "../components/Header.tsx";
import Footer from "../components/Footer.astro";
import config from "../config";
import "../styles/global.css";

interface Props {
  title: string;
  isHome?: boolean;
  image?: string;
  description?: string;
  appStoreId?: string;
}

const { title, isHome, image, description, appStoreId } = Astro.props;
const { pathname } = Astro.url;
---

<!doctype html>
<html lang="en">
  <head>
    <Metas
      isHome={isHome}
      postImage={image}
      postDescription={description}
      pageTitle={title}
      appStoreId={appStoreId}
    />
    <GoogleAnalytics id={config.googleAnalytics} />
  </head>
  <body
    class="bg-gray-50 tracking-tight text-gray-950 selection:bg-black selection:text-white dark:bg-black dark:text-white dark:selection:bg-white dark:selection:text-black"
  >
    <Header pathname={pathname} isHome={isHome} client:load />
    <main>
      <slot />
    </main>
    <Footer />
  </body>
</html>

<script is:inline>
  const getThemePreference = () => {
    if (typeof localStorage !== "undefined" && localStorage.getItem("theme")) {
      return localStorage.getItem("theme");
    }
    return window.matchMedia("(prefers-color-scheme: dark)").matches
      ? "dark"
      : "light";
  };
  const isDark = getThemePreference() === "dark";
  document.documentElement.classList[isDark ? "add" : "remove"]("dark");

  if (typeof localStorage !== "undefined") {
    const observer = new MutationObserver(() => {
      const isDark = document.documentElement.classList.contains("dark");
      localStorage.setItem("theme", isDark ? "dark" : "light");
    });
    observer.observe(document.documentElement, {
      attributes: true,
      attributeFilter: ["class"],
    });
  }
</script>
