---
import { Image } from "astro:assets";
import { existsSync } from "fs";
import { resolve } from "path";
import BaseLayout from "@/layouts/BaseLayout.astro";
import apps from "@/apps";
import Button from "@/components/Button.astro";
import SubNav from "@/components/SubNav.astro";

export async function getStaticPaths() {
  return apps;
}

const { slug } = Astro.params;

interface Props {
  appName: string;
  description: string;
  iconUrl: string;
  appStoreId?: string;
  testflightUrl?: string;
}

const { appName, description, iconUrl, appStoreId, testflightUrl } =
  Astro.props;

const isBeta = appStoreId === undefined && testflightUrl !== undefined;

const faqPath = resolve(`src/content/apps/${slug}/faq.md`);
const privacyPath = resolve(`src/content/apps/${slug}/privacy.md`);
const hasFaq = existsSync(faqPath);
const hasPrivacy = existsSync(privacyPath);
const shouldShowSubNav = hasFaq && hasPrivacy;
---

<BaseLayout
  title={appName}
  appStoreId={appStoreId}
  image={iconUrl}
  description={description}
>
  <section>
    <div class="py-32 sm:py-40">
      {
        shouldShowSubNav && (
          <SubNav slug={slug} appName={appName} appIconUrl={iconUrl} />
        )
      }
      <div class="mx-auto max-w-7xl px-6 lg:px-8">
        <article>
          <div class="mx-auto lg:mx-0">
            <Image
              class="m-8 mx-auto rounded-4xl"
              src={iconUrl}
              alt={appName}
              width={200}
              height={200}
            />
          </div>
          <div class="text-center">
            <h1
              class="text-5xl font-extrabold tracking-tight text-balance sm:text-7xl"
            >
              {appName}
            </h1>
            <p
              class="mt-8 text-lg font-medium text-pretty text-gray-500 sm:text-xl/8"
            >
              {description}
            </p>
            <div
              class="mt-10 flex max-w-none flex-col flex-nowrap gap-6 sm:flex-row sm:justify-center"
            >
              <div class="flex w-full sm:w-auto">
                <Button
                  link={isBeta
                    ? testflightUrl
                    : `https://apps.apple.com/app/id${appStoreId}`}
                  icon="brand-apple-filled"
                  openInNewTab
                >
                  {
                    isBeta ? (
                      <span>Join beta on TestFlight</span>
                    ) : (
                      <span>Download on App Store</span>
                    )
                  }
                </Button>
              </div>
            </div>
          </div>
        </article>
      </div>
    </div>
  </section>
</BaseLayout>
